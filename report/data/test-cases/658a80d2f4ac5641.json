{"uid":"658a80d2f4ac5641","name":"test_11_my_collect_list","fullName":"Applets-user.test_my#test_11_my_collect_list","historyId":"5154df5b6d57e859cad2653bc70ae6fe","time":{"start":1664361302702,"stop":1664361302747,"duration":45},"description":"我的收藏列表","descriptionHtml":"<p>我的收藏列表</p>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 200","statusTrace":"@allure.feature(\"小程序用户端\")\n    @allure.story(\"我的模块测试用例\")\n    @allure.description(\"我的收藏列表\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_11_my_collect_list():\n        \"\"\"我的收藏列表\"\"\"\n        # 通过Fixture函数获取get_token_fixture值，即token，再将token添加到请求头中\n        headers = {\n            \"Content-Type\": \"application/json;charset=utf8\",\n            # \"Authorization\": get_token_fixture\n        }\n        data = {\n            \"uid\":\"1\", #用户id\n            \"type\":\"1\", #0商品 1 店铺\n            \"page\":\"1\",\n            \"pagesize\":\"10\"\n        }\n        url = URL + \"/h5/user.User/myCollect\"\n        res = requests.post(url=url, headers=headers,params=data).text\n        res = json.loads(res)\n        print(res)\n>       assert res[\"code\"] == 200\nE       assert 400 == 200\n\nApplets-user\\test_my.py:241: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"我的收藏列表","status":"failed","statusMessage":"AssertionError: assert 400 == 200","statusTrace":"@allure.feature(\"小程序用户端\")\n    @allure.story(\"我的模块测试用例\")\n    @allure.description(\"我的收藏列表\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_11_my_collect_list():\n        \"\"\"我的收藏列表\"\"\"\n        # 通过Fixture函数获取get_token_fixture值，即token，再将token添加到请求头中\n        headers = {\n            \"Content-Type\": \"application/json;charset=utf8\",\n            # \"Authorization\": get_token_fixture\n        }\n        data = {\n            \"uid\":\"1\", #用户id\n            \"type\":\"1\", #0商品 1 店铺\n            \"page\":\"1\",\n            \"pagesize\":\"10\"\n        }\n        url = URL + \"/h5/user.User/myCollect\"\n        res = requests.post(url=url, headers=headers,params=data).text\n        res = json.loads(res)\n        print(res)\n>       assert res[\"code\"] == 200\nE       assert 400 == 200\n\nApplets-user\\test_my.py:241: AssertionError","steps":[],"attachments":[{"uid":"3892d212f3212ccf","name":"stdout","source":"3892d212f3212ccf.txt","type":"text/plain","size":39}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"小程序用户端"},{"name":"story","value":"我的模块测试用例"},{"name":"parentSuite","value":"Applets-user"},{"name":"suite","value":"test_my"},{"name":"host","value":"DESKTOP-UQM59VD"},{"name":"thread","value":"6912-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Applets-user.test_my"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"33ca16eb5a52e59f","status":"failed","statusDetails":"AssertionError: assert 400 == 200","time":{"start":1664361190849,"stop":1664361190879,"duration":30}}]},"tags":[]},"source":"658a80d2f4ac5641.json","parameterValues":[]}